# Personal Zsh configuration file. It is strongly recommended to keep all
# shell customization and configuration (including exported environment
# variables such as PATH) in this file or in files source by it.
#
# Documentation: https://github.com/romkatv/zsh4humans/blob/v5/README.md.

if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi

if [[ -n "${GITHUB_CODESPACE_TOKEN}" ]]; then
  typeset -g POWERLEVEL9K_INSTANT_PROMPT=quiet
fi

export EDITOR=vim
export TERM=xterm-256color
export LC_ALL=en_US.UTF-8
export LANG=en_US.UTF-8
export GOPATH=$HOME/go
export PATH=$PATH:$GOPATH/bin
export PATH="/Applications/Postgres.app/Contents/Versions/9.6/bin:$PATH"
export PATH="$PATH:${HOME}/.krew/bin"
export PATH="$PATH:${HOME}/.local/bin"
export PATH="$PATH:$HOME/.arkade/bin"

# Chezmoi cached variables
export CM_computer_name={{ .computer_name }}
export CM_hostname={{ .hostname }}

# force zsh-you-should-use
# export YSU_HARDCORE=1

# export OBJC_DISABLE_INITIALIZE_FORK_SAFETY=YES

# History
# https://unix.stackexchange.com/questions/273861/unlimited-history-in-zsh
HISTFILE="$HOME/.zsh_history"
HISTSIZE=10000000
SAVEHIST=10000000
setopt BANG_HIST                 # Treat the '!' character specially during expansion.
setopt EXTENDED_HISTORY          # Write the history file in the ":start:elapsed;command" format.
setopt INC_APPEND_HISTORY        # Write to the history file immediately, not when the shell exits.
setopt SHARE_HISTORY             # Share history between all sessions.
setopt HIST_EXPIRE_DUPS_FIRST    # Expire duplicate entries first when trimming history.
setopt HIST_IGNORE_DUPS          # Don't record an entry that was just recorded again.
setopt HIST_IGNORE_ALL_DUPS      # Delete old recorded entry if new entry is a duplicate.
setopt HIST_FIND_NO_DUPS         # Do not display a line previously found.
setopt HIST_IGNORE_SPACE         # Don't record an entry starting with a space.
setopt HIST_SAVE_NO_DUPS         # Don't write duplicate entries in the history file.
setopt HIST_REDUCE_BLANKS        # Remove superfluous blanks before recording entry.
setopt HIST_VERIFY               # Don't execute immediately upon history expansion.
setopt HIST_BEEP                 # Beep when accessing nonexistent history.

ulimit -n 8192

# POWERLEVEL9K_LEFT_PROMPT_ELEMENTS=(user dir vcs rbenv rspec_stats newline)
# POWERLEVEL9K_RIGHT_PROMPT_ELEMENTS=(status root_indicator ip background_jobs history time)

# Prefer using emacs mode for zsh
bindkey -e

{{ if .flags.is_codespace -}}
if [[ ! -r "$Z4H/stickycache/no-chsh" ]]; then
  mkdir -p $Z4H/stickycache
  touch $Z4H/stickycache/no-chsh
fi
{{- end }}

# Periodic auto-update on Zsh startup: 'ask' or 'no'.
# You can manually run `z4h update` to update everything.
zstyle ':z4h:' auto-update      'no'
# Ask whether to auto-update this often; has no effect if auto-update is 'no'.
zstyle ':z4h:' auto-update-days '28'

# Start tmux if not already in tmux.
# zstyle ':z4h:' start-tmux       command tmux -u new -A -D -t z4h

# Move prompt to the bottom when zsh starts and on Ctrl+L.
zstyle ':z4h:' prompt-at-bottom 'yes'

# Keyboard type: 'mac' or 'pc'.
zstyle ':z4h:bindkey' keyboard  'mac'

# Right-arrow key accepts one character ('partial-accept') from
# command autosuggestions or the whole thing ('accept')?
zstyle ':z4h:autosuggestions' forward-char 'accept'

# Recursively traverse directories when TAB-completing files.
zstyle ':z4h:fzf-complete' recurse-dirs 'yes'

# Enable direnv to automatically source .envrc files.
zstyle ':z4h:direnv'         enable 'yes'
# Show "loading" and "unloading" notifications from direnv.
zstyle ':z4h:direnv:success' notify 'yes'

# Enable ('yes') or disable ('no') automatic teleportation of z4h over
# ssh when connecting to these hosts.
zstyle ':z4h:ssh:example-hostname1'   enable 'yes'
zstyle ':z4h:ssh:*.example-hostname2' enable 'no'
# The default value if none of the overrides above match the hostname.
zstyle ':z4h:ssh:*'                   enable 'no'

# Send these files over to the remote host when connecting over ssh to the
# enabled hosts.
zstyle ':z4h:ssh:*' send-extra-files '~/.nanorc' '~/.env.zsh'

# Clone additional Git repositories from GitHub.
#
# This doesn't do anything apart from cloning the repository and keeping it
# up-to-date. Cloned files can be used after `z4h init`. This is just an
# example. If you don't plan to use Oh My Zsh, delete this line.
# z4h install ohmyzsh/ohmyzsh || return
z4h install romkatv/zsh-prompt-benchmark || return
z4h install mollifier/cd-gitroot || return
z4h install olets/zsh-abbr || return
z4h install sobolevn/wakatime-zsh-plugin

# Install or update core components (fzf, zsh-autosuggestions, etc.) and
# initialize Zsh. After this point console I/O is unavailable until Zsh
# is fully initialized. Everything that requires user interaction or can
# perform network I/O must be done above. Everything else is best done below.
z4h init || return

# Export environment variables.
export GPG_TTY=$TTY

# Source additional local files if they exist.
z4h source ~/.env.zsh

# Use additional Git repositories pulled in with `z4h install`.
#
# This is just an example that you should delete. It does nothing useful.
# z4h source ohmyzsh/ohmyzsh/lib/diagnostics.zsh  # source an individual file
# z4h load   ohmyzsh/ohmyzsh/plugins/emoji-clock  # load a plugin
z4h load   romkatv/zsh-prompt-benchmark  # load a plugin
z4h load   mollifier/cd-gitroot
z4h load   olets/zsh-abbr
z4h load   sobolevn/wakatime-zsh-plugin

# Define key bindings.
z4h bindkey undo Ctrl+/  # undo the last command line change
z4h bindkey redo Alt+/   # redo the last undone command line change

z4h bindkey z4h-cd-back    Shift+Left   # cd into the previous directory
z4h bindkey z4h-cd-forward Shift+Right  # cd into the next directory
z4h bindkey z4h-cd-up      Shift+Up     # cd into the parent directory
z4h bindkey z4h-cd-down    Shift+Down   # cd into a child directory

# Autoload functions.
autoload -Uz zmv

# Define functions and completions.
function md() { [[ $# == 1 ]] && mkdir -p -- "$1" && cd -- "$1" }
compdef _directories md

# Define named directories: ~w <=> Windows home directory on WSL.
[[ -z $z4h_win_home ]] || hash -d w=$z4h_win_home

# Define aliases.
alias tree='tree -a -I .git'

# Add flags to existing aliases.
alias ls="${aliases[ls]:-ls} -A"

# Set shell options: http://zsh.sourceforge.net/Doc/Release/Options.html.
setopt glob_dots     # no special treatment for file names with a leading dot
setopt no_auto_menu  # require an extra TAB press to open the completion menu

{{ if (eq .chezmoi.os "darwin" ) -}}
# Mac specific config
if [[ "$(uname -m)" == "arm64" ]]; then
  # 3. x86 brew bin
  if [ -f /usr/local/bin/brew ]; then
    eval $(/usr/local/bin/brew shellenv)
  fi

  # 2. arm64 brew
  if [ -f /opt/homebrew/bin/brew ]; then
    eval $(/opt/homebrew/bin/brew shellenv)
  fi
else
  # 3. arm64 brew
  if [ -f /opt/homebrew/bin/brew ]; then
    eval $(/opt/homebrew/bin/brew shellenv)
  fi

  # 2. x86 brew bin
  if [ -f /usr/local/bin/brew ]; then
    eval $(/usr/local/bin/brew shellenv)
  fi
fi

# 1. user brew
if [ -f ~/homebrew/bin/brew ]; then
  eval $(~/homebrew/bin/brew shellenv)
fi
{{- end }}

# Cleanup duplicated PATHs (mostly from shellenv evals above)
PATH="$(perl -e 'print join(":", grep { not $seen{$_}++ } split(/:/, $ENV{PATH}))')"

if [ -f "$HOME/.zshrc.local" ]; then
  source "$HOME/.zshrc.local"
fi

# NixOS
if [ -e ~/.nix-profile/etc/profile.d/nix.sh ]; then
  . ~/.nix-profile/etc/profile.d/nix.sh;
fi

# Zoxide : prompt hook mode
if command -v zoxide &> /dev/null; then
  eval "$(zoxide init zsh --hook prompt)"
fi

z4h source $HOME/.config/zsh/config/00_aliases.zsh
z4h source $HOME/.config/zsh/config/10_options.zsh
z4h source $HOME/.config/zsh/config/20_functions.zsh

z4h source $HOME/.asdf/asdf.sh

if [ -d "$HOME/.asdf/plugins/direnv" ]; then
  # Old hook script
  # eval "$(asdf exec direnv hook zsh)"
  # direnv() { asdf exec direnv "$@"; }

  # New hook script
  if [ -s "${XDG_CONFIG_HOME:-$HOME/.config}/asdf-direnv/zshrc" ]; then
    source "${XDG_CONFIG_HOME:-$HOME/.config}/asdf-direnv/zshrc"
  fi
fi

# Timing App Terminal Support
if [ $ITERM_SESSION_ID ]; then
  DISABLE_AUTO_TITLE="true"
  echo -ne "\033]0; @ ${HOST%%.*} : ${PWD/#$HOME/~} \007"
fi

precmd() {
  echo -ne "\033]0; @ ${HOST%%.*} : ${PWD/#$HOME/~} \007"
}

# Meteor
export PATH=/Users/narze/.meteor:$PATH

# bun completions
[ -s "/Users/narze/.bun/_bun" ] && source "/Users/narze/.bun/_bun"

# Bun
export BUN_INSTALL="/Users/narze/.bun"
export PATH="$BUN_INSTALL/bin:$PATH"

# Extend bin PATH.
path=(~/bin $path)

# Nix
if [ -e '/nix/var/nix/profiles/default/etc/profile.d/nix-daemon.sh' ]; then
  . '/nix/var/nix/profiles/default/etc/profile.d/nix-daemon.sh'
fi

# pnpm
export PNPM_HOME="/Users/narze/Library/pnpm"
export PATH="$PNPM_HOME:$PATH"
